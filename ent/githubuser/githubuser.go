// Code generated by ent, DO NOT EDIT.

package githubuser

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the githubuser type in the database.
	Label = "github_user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGhUsername holds the string denoting the gh_username field in the database.
	FieldGhUsername = "gh_username"
	// FieldSlackID holds the string denoting the slack_id field in the database.
	FieldSlackID = "slack_id"
	// FieldGhAccessToken holds the string denoting the gh_access_token field in the database.
	FieldGhAccessToken = "gh_access_token"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the githubuser in the database.
	Table = "github_users"
)

// Columns holds all SQL columns for githubuser fields.
var Columns = []string{
	FieldID,
	FieldGhUsername,
	FieldSlackID,
	FieldGhAccessToken,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the GithubUser queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByGhUsername orders the results by the gh_username field.
func ByGhUsername(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGhUsername, opts...).ToFunc()
}

// BySlackID orders the results by the slack_id field.
func BySlackID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSlackID, opts...).ToFunc()
}

// ByGhAccessToken orders the results by the gh_access_token field.
func ByGhAccessToken(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGhAccessToken, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
